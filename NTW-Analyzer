import openpyxl
from netmiko import ConnectHandler

# Function to connect to a Cisco device and retrieve device information
def get_device_info(device):
    # SSH connection details
    connection = {
        'device_type': 'cisco_ios',
        'ip': device['ip'],
        'username': device['username'],
        'password': device['password'],
    }

    try:
        # Establish SSH connection
        net_connect = ConnectHandler(**connection)

        # Get device information
        device_info = {
            'Device Name': device['name'],
            'Device IP': device['ip'],
            'Device Banner': net_connect.send_command('show banner motd'),
            'Inventory': net_connect.send_command('show inventory'),
            'License Status': net_connect.send_command('show license'),
            'Number of Ports': net_connect.send_command('show interfaces status | include connected').count('\n'),
            'CDP Neighbors': net_connect.send_command('show cdp neighbors detail'),
            'VLANs and Interfaces': net_connect.send_command('show interfaces switchport'),
        }

        # Close SSH connection
        net_connect.disconnect()

        return device_info
    except Exception as e:
        print(f"Error connecting to {device['name']} - {str(e)}")
        return None


# Read Cisco device details from Excel file
def read_device_details(file_path):
    workbook = openpyxl.load_workbook(file_path)
    sheet = workbook.active

    devices = []

    for row in sheet.iter_rows(min_row=2, values_only=True):
        device = {
            'name': row[0],
            'ip': row[1],
            'username': row[2],
            'password': row[3],
        }
        devices.append(device)

    return devices


# Main function to process devices and retrieve information
def main():
    file_path = 'device_details.xlsx'  # Replace with your Excel file path
    devices = read_device_details(file_path)

    if not devices:
        print("No devices found in the Excel file.")
        return

    device_info_list = []

    for device in devices:
        device_info = get_device_info(device)
        if device_info:
            device_info_list.append(device_info)

    # Print the collected information in a table format
    print("Device Information:")
    for device_info in device_info_list:
        print("=" * 40)
        for key, value in device_info.items():
            print(f"{key}: {value}")
        print("=" * 40)


# Run the main function
if __name__ == '__main__':
    main()
